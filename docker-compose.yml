version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: cybersec-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: cybersec-platform
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - cybersec-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: cybersec-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cybersec-network

  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cybersec-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://admin:password@mongodb:27017/cybersec-platform?authSource=admin
      REDIS_URL: redis://redis:6379
      ML_SERVICE_URL: http://ml-service:8001
      PORT: 3000
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - cybersec-network

  # ML Service (FastAPI)
  ml-service:
    build:
      context: ./ml-service
      dockerfile: Dockerfile
    container_name: cybersec-ml-service
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      MONGODB_URI: mongodb://admin:password@mongodb:27017/cybersec-platform?authSource=admin
      REDIS_URL: redis://redis:6379
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./ml-service/models:/app/models
    networks:
      - cybersec-network

  # Frontend (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cybersec-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    environment:
      REACT_APP_API_URL: http://localhost:3000
      REACT_APP_ML_SERVICE_URL: http://localhost:8001
    depends_on:
      - backend
    networks:
      - cybersec-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: cybersec-nginx
    restart: unless-stopped
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - cybersec-network

volumes:
  mongodb_data:
  redis_data:

networks:
  cybersec-network:
    driver: bridge